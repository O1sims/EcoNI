var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { h, Component } from "preact";
import { KeysAndValues } from './KeysAndValues';
var TransSummary = /** @class */ (function (_super) {
    __extends(TransSummary, _super);
    function TransSummary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TransSummary.prototype.render = function () {
        return (h("div", { className: "uirTranVis_transSummary" },
            h("div", { className: "uirTranVis_summaryData" },
                h("span", null, "From:"),
                h("strong", null, this.props.trans.from().name || '(root)')),
            h("div", { className: "uirTranVis_summaryData" },
                h("span", null, "To:"),
                h("strong", null, this.props.trans.to().name || '(root)')),
            h("div", { className: "uirTranVis_summaryData" },
                h("span", null, "Result:"),
                h("div", null,
                    h("strong", null, this.props.status),
                    this.props.rejection ? h("span", null,
                        ": ",
                        this.props.rejection) : null)),
            h("div", { className: "uirTranVis_summaryHeading" }, "Parameter Values:"),
            h("div", null,
                h(KeysAndValues, { groupedValues: KeysAndValues.falsyGroupDefinitions, enableGroupToggle: true, data: this.props.trans.params(), modalTitle: "Parameter value", classes: { div: 'uirTranVis_keyValue', key: '', val: '' } }))));
    };
    return TransSummary;
}(Component));
export { TransSummary };
//# sourceMappingURL=TransSummary.js.map